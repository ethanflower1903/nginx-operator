name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v1
      with:
        go-version: 1.16.x
    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-gorace-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-gorace-${{ hashFiles('**/go.sum') }}-
          ${{ runner.os }}-gorace-
    # This magic line is to restore the timestamps (mtime) for each file based
    # on the its last commit. This allows Go test cache to reuse results for
    # tests that depend on fixture files.
    - run: git ls-tree -r -t --full-name --name-only HEAD | grep -v vendor | xargs -I{} -P4 sh -c 'touch -d $(git log --pretty=format:%cI -1 HEAD -- "{}") "{}"'
    - run: make test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: actions/setup-go@v1
      with:
        go-version: 1.16.x
    - run: |
        make lint

  integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.9.0"
        image: 'kindest/node:v1.17.11'
    - uses: actions/setup-go@v1
      with:
        go-version: 1.16.x
    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-goleak-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-goleak-${{ hashFiles('**/go.sum') }}-
          ${{ runner.os }}-goleak-
    - run: git ls-tree -r -t --full-name --name-only HEAD | grep -v vendor | xargs -I{} -P4 sh -c 'touch -d $(git log --pretty=format:%cI -1 HEAD -- "{}") "{}"'
    - name: Setup
      run: |
        kubectl create namespace nginx-operator-system
        make install docker-build
        kind load docker-image ${IMAGE}:${TAG}
        (cd ./config/manager && kustomize edit set image controller=${IMAGE}:${TAG})
        kind load docker-image ${IMAGE}:${TAG}
        make deploy

        # NOTE: workaround to disable OpenAPI validation since it doesn't work
        # with field named as `items` on Kubernetes lesser than v1.16.0.
        # See more at:
        # - https://github.com/kubernetes/kubernetes/issues/68466
        # - https://github.com/kubernetes/kubernetes/pull/76124/files
        kubectl patch crds nginxes.nginx.tsuru.io --type=json --patch='[{"op": "replace", "path": "/spec/validation", "value": {}}]'
      env:
        IMAGE: tsuru/nginx-operator
        TAG: integration
    - run: |
        NGINX_OPERATOR_INTEGRATION=1 make test

  docker-image:
    needs:
    - test
    - lint
    - integration
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: Surgo/docker-smart-tag-action@v1
      id: smarttag
      with:
        docker_image: tsuru/nginx-operator
        default_branch: main
        tag_with_sha: "true"
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.smarttag.outputs.tag }}
